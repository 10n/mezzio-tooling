{
    "name": "zendframework/zend-expressive-tooling",
    "description": "Migration and development tooling for Expressive",
    "license": "BSD-3-Clause",
    "keywords": [
        "http",
        "middleware",
        "psr",
        "psr-7",
        "zf",
        "zendframework",
        "zend-expressive"
    ],
    "support": {
        "issues": "https://github.com/zendframework/zend-expressive-tooling/issues",
        "source": "https://github.com/zendframework/zend-expressive-tooling",
        "rss": "https://github.com/zendframework/zend-expressive-tooling/releases.atom",
        "slack": "https://zendframework-slack.herokuapp.com",
        "forum": "https://discourse.zendframework.com/c/questions/expressive"
    },
    "require": {
        "php": "^7.1",
        "symfony/console": "^2.8 || ^3.0 || ^4.0",
        "zendframework/zend-code": "^2.6.3 || ^3.3",
        "zendframework/zend-component-installer": "^1.1",
        "zendframework/zend-expressive": "^3.0.0-dev",
        "zendframework/zend-expressive-router": "^3.0.0-dev",
        "zendframework/zend-stdlib": "^3.1",
        "zendframework/zend-stratigility": "^3.0.0-dev",
        "zfcampus/zf-composer-autoloading": "^2.0"
    },
    "require-dev": {
        "malukenho/docheader": "^0.1.6",
        "mikey179/vfsStream": "^1.6.5",
        "mockery/mockery": "^1.0",
        "php-mock/php-mock-phpunit": "^2.0",
        "phpunit/phpunit": "^6.4.4, <6.5",
        "zendframework/zend-coding-standard": "~1.0.0"
    },
    "autoload": {
        "psr-4": {
            "Zend\\Expressive\\Tooling\\": "src/"
        }
    },
    "autoload-dev": {
        "psr-4": {
            "ZendTest\\Expressive\\Tooling\\": "test/"
        }
    },
    "config": {
        "sort-packages": true
    },
    "extra": {
        "branch-alias": {
            "dev-master": "0.4.x-dev",
            "dev-release-1.0.0": "1.0.x-dev"
        }
    },
    "bin": [
        "bin/expressive",
        "bin/expressive-migrate-original-messages",
        "bin/expressive-module",
        "bin/expressive-pipeline-from-config",
        "bin/expressive-scan-for-error-middleware"
    ],
    "scripts": {
        "check": [
            "@license-check",
            "@cs-check",
            "@test"
        ],
        "cs-check": "phpcs",
        "cs-fix": "phpcbf",
        "test": "phpunit --colors=always",
        "test-coverage": "phpunit --colors=always --coverage-clover clover.xml",
        "upload-coverage": "coveralls -v",
        "license-check": "docheader check src/"
    }
}
